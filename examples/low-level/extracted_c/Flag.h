/* This file auto-generated by KreMLin! */
#ifndef __Flag_H
#define __Flag_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "FStar_Bytes.h"
#include "FStar_Buffer.h"
#include "Buffer_Utils.h"
#include "Crypto_Symmetric_Bytes.h"
#include "Crypto_Symmetric_Poly1305_Spec.h"
#include "Crypto_Symmetric_Poly1305_Parameters.h"
#include "Crypto_Symmetric_Poly1305_Bigint.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part1.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part2.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part3.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part4.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part5.h"
#include "FStar_Buffer_Quantifiers.h"
#include "Crypto_Symmetric_Chacha20.h"
#include "Crypto_Indexing.h"
#include "kremlib.h"
#include "testlib.h"

bool Flag_cipher_prf(Crypto_Indexing_cipherAlg a);

extern bool Flag_mac_log;

bool Flag_mac_int1cma(Crypto_Indexing_macAlg a);

extern bool Flag_prf_cpa;

bool Flag_safeHS(Crypto_Indexing_id i);

bool Flag_prf(Crypto_Indexing_id i);

bool Flag_mac1(Crypto_Indexing_id i);

bool Flag_safeId(Crypto_Indexing_id i);

void Flag_mac1_implies_mac_log(Crypto_Indexing_id i);

void Flag_mac1_implies_prf(Crypto_Indexing_id i);

void Flag_safeId_implies_mac1(Crypto_Indexing_id i);

void Flag_safeId_implies_cpa(Crypto_Indexing_id i);

extern bool Flag_aes_ct;
#endif
