/* This file auto-generated by KreMLin! */
#ifndef __Buffer_Utils_H
#define __Buffer_Utils_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "FStar_Bytes.h"
#include "FStar_Buffer.h"
#include "kremlib.h"
#include "testlib.h"

typedef uint32_t Buffer_Utils_u32;

typedef uint8_t Buffer_Utils_u8;

typedef uint32_t *Buffer_Utils_uint32s;

typedef uint8_t *Buffer_Utils_bytes;

uint32_t Buffer_Utils_op_Greater_Greater_Greater(uint32_t a, uint32_t s);

uint32_t Buffer_Utils_op_Less_Less_Less(uint32_t a, uint32_t s);

void Buffer_Utils_xor_bytes_inplace(uint8_t *output, uint8_t *in1, uint32_t len);

void Buffer_Utils_lemma_euclidean_division(Prims_nat r, Prims_nat b, Prims_pos q);

void Buffer_Utils_lemma_uint32_of_bytes(uint32_t a, uint32_t b, uint32_t c, uint32_t d);

uint32_t Buffer_Utils_uint32_of_bytes(uint8_t *b);

void Buffer_Utils_bytes_of_uint32s(uint8_t *output, uint32_t *m, uint32_t l);

void Buffer_Utils_bytes_of_uint32(uint8_t *output, uint32_t x);

void Buffer_Utils_memset(uint8_t *b, uint8_t z, uint32_t len);
#endif
