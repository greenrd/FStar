/* This file auto-generated by KreMLin! */
#ifndef __Crypto_Symmetric_Poly1305_Parameters_H
#define __Crypto_Symmetric_Poly1305_Parameters_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "FStar_Bytes.h"
#include "FStar_Buffer.h"
#include "Buffer_Utils.h"
#include "Crypto_Symmetric_Bytes.h"
#include "Crypto_Symmetric_Poly1305_Spec.h"
#include "kremlib.h"
#include "testlib.h"

extern Prims_pos Crypto_Symmetric_Poly1305_Parameters_platform_size;

extern Prims_pos Crypto_Symmetric_Poly1305_Parameters_platform_wide;

extern Prims_pos Crypto_Symmetric_Poly1305_Parameters_norm_length;

extern uint32_t Crypto_Symmetric_Poly1305_Parameters_nlength;

extern Prims_pos Crypto_Symmetric_Poly1305_Parameters_bytes_length;

extern uint32_t Crypto_Symmetric_Poly1305_Parameters_blength;

Prims_pos Crypto_Symmetric_Poly1305_Parameters_templ(Prims_nat x);
#endif
