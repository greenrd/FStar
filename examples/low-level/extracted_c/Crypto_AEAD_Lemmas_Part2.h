/* This file auto-generated by KreMLin! */
#ifndef __Crypto_AEAD_Lemmas_Part2_H
#define __Crypto_AEAD_Lemmas_Part2_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "FStar_Bytes.h"
#include "FStar_Buffer.h"
#include "Buffer_Utils.h"
#include "Crypto_Symmetric_Bytes.h"
#include "Crypto_Symmetric_Poly1305_Spec.h"
#include "Crypto_Symmetric_Poly1305_Parameters.h"
#include "Crypto_Symmetric_Poly1305_Bigint.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part1.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part2.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part3.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part4.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part5.h"
#include "FStar_Buffer_Quantifiers.h"
#include "Crypto_Symmetric_Chacha20.h"
#include "Crypto_Indexing.h"
#include "Flag.h"
#include "Crypto_Symmetric_AES.h"
#include "Crypto_Symmetric_AES128.h"
#include "Crypto_Symmetric_Cipher.h"
#include "Crypto_Symmetric_Poly1305_Lemmas.h"
#include "Crypto_Symmetric_Poly1305_Bignum_Lemmas_Part6.h"
#include "Crypto_Symmetric_Poly1305_Bignum.h"
#include "Crypto_Symmetric_Poly1305.h"
#include "Crypto_Symmetric_GF128_Spec.h"
#include "Crypto_Symmetric_GF128.h"
#include "Crypto_Symmetric_MAC.h"
#include "Crypto_Symmetric_UF1CMA.h"
#include "Crypto_Plain.h"
#include "Crypto_Symmetric_PRF.h"
#include "Crypto_AEAD_Encoding.h"
#include "Crypto_AEAD_Invariant.h"
#include "Crypto_AEAD_Lemmas.h"
#include "kremlib.h"
#include "testlib.h"

void
Crypto_AEAD_Lemmas_Part2_invert_refines(
  FStar_HyperStack_mem h,
  Crypto_Indexing_id i,
  FStar_HyperHeap_rid rgn,
  void *entries,
  void *blocks
);

void
Crypto_AEAD_Lemmas_Part2_find_entry_first(
  Crypto_Indexing_id i,
  FStar_UInt128_t n,
  void *entries
);

void
Crypto_AEAD_Lemmas_Part2_find_is_some(
  Crypto_Indexing_id i,
  FStar_HyperHeap_rid rgn,
  void *b,
  Crypto_Symmetric_PRF_domain____ x
);

void
Crypto_AEAD_Lemmas_Part2_find_blocks_append_l(
  Crypto_Indexing_id i,
  FStar_HyperHeap_rid rgn,
  void *b,
  void *b_,
  Crypto_Symmetric_PRF_domain____ x
);

typedef struct {
  Crypto_AEAD_Invariant_entry____ fst;
  void *snd;
}
K___Crypto_AEAD_Invariant_entry_____FStar_Seq_seq_Crypto_Symmetric_PRF_entry_______;

K___Crypto_AEAD_Invariant_entry_____FStar_Seq_seq_Crypto_Symmetric_PRF_entry_______
Crypto_AEAD_Lemmas_Part2_find_entry_blocks(
  Crypto_Indexing_id i,
  FStar_HyperHeap_rid rgn,
  FStar_UInt128_t n,
  void *entries,
  void *prf_entries,
  FStar_HyperStack_mem h
);

void
Crypto_AEAD_Lemmas_Part2_trans_all_above(
  FStar_HyperHeap_rid rgn,
  Crypto_Indexing_id i,
  void *s,
  Crypto_Symmetric_PRF_domain____ x,
  Crypto_Symmetric_PRF_domain____ y
);

void
Crypto_AEAD_Lemmas_Part2_refl_modifies_table_above_x_and_buffer(
  Crypto_Indexing_id i,
  Prims_nat l,
  Crypto_Symmetric_PRF_state____ t,
  Crypto_Symmetric_PRF_domain____ x,
  uint8_t *c,
  FStar_HyperStack_mem h
);

void
Crypto_AEAD_Lemmas_Part2_trans_modifies_table_above_x_and_buffer(
  Crypto_Indexing_id i,
  Prims_nat l,
  Crypto_Symmetric_PRF_state____ t,
  Crypto_Symmetric_PRF_domain____ x_0,
  Crypto_Symmetric_PRF_domain____ x_1,
  uint8_t *c,
  FStar_HyperStack_mem h_0,
  FStar_HyperStack_mem h_1,
  FStar_HyperStack_mem h_2
);

void
Crypto_AEAD_Lemmas_Part2_x_buffer_1_modifies_table_above_x_and_buffer(
  Crypto_Indexing_id i,
  Prims_nat l,
  Crypto_Symmetric_PRF_state____ t,
  Crypto_Symmetric_PRF_domain____ x,
  uint8_t *c,
  FStar_HyperStack_mem h_0,
  FStar_HyperStack_mem h_1
);

void
Crypto_AEAD_Lemmas_Part2_fresh_frame_modifies_table_above_x_and_buffer(
  Crypto_Indexing_id i,
  Prims_nat l,
  Crypto_Symmetric_PRF_state____ t,
  Crypto_Symmetric_PRF_domain____ x,
  uint8_t *c,
  FStar_HyperStack_mem h_0,
  FStar_HyperStack_mem h_1,
  FStar_HyperStack_mem h_2
);

void
Crypto_AEAD_Lemmas_Part2_pop_frame_modifies_table_above_x_and_buffer(
  Crypto_Indexing_id i,
  Prims_nat l,
  Crypto_Symmetric_PRF_state____ t,
  Crypto_Symmetric_PRF_domain____ x,
  uint8_t *c,
  FStar_HyperStack_mem h_0,
  FStar_HyperStack_mem h_1,
  FStar_HyperStack_mem h_2
);

void
Crypto_AEAD_Lemmas_Part2_prf_enxor_leaves_none_strictly_above_x(
  Crypto_Indexing_id i,
  Crypto_Symmetric_PRF_state____ t,
  Crypto_Symmetric_PRF_domain____ x,
  uint32_t len,
  uint32_t remaining_len,
  uint8_t *c,
  FStar_HyperStack_mem h_0,
  FStar_HyperStack_mem h_1
);
#endif
