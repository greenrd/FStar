/* This file auto-generated by KreMLin! */
#ifndef __FStar_BitVector_H
#define __FStar_BitVector_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "kremlib.h"
#include "testlib.h"

void *FStar_BitVector_zero_vec(Prims_pos n);

void *FStar_BitVector_elem_vec(Prims_pos n, Prims_nat i);

void *FStar_BitVector_ones_vec(Prims_pos n);

void *FStar_BitVector_logand_vec(Prims_pos n, void *a, void *b);

void *FStar_BitVector_logxor_vec(Prims_pos n, void *a, void *b);

void *FStar_BitVector_logor_vec(Prims_pos n, void *a, void *b);

void *FStar_BitVector_lognot_vec(Prims_pos n, void *a);

void FStar_BitVector_logand_vec_definition(Prims_pos n, void *a, void *b, Prims_nat i);

void FStar_BitVector_logxor_vec_definition(Prims_pos n, void *a, void *b, Prims_nat i);

void FStar_BitVector_logor_vec_definition(Prims_pos n, void *a, void *b, Prims_nat i);

void FStar_BitVector_lognot_vec_definition(Prims_pos n, void *a, Prims_nat i);

void FStar_BitVector_lemma_xor_bounded(Prims_pos m, Prims_nat n, void *x, void *y);

void *FStar_BitVector_shift_left_vec(Prims_pos n, void *a, Prims_nat s);

void *FStar_BitVector_shift_right_vec(Prims_pos n, void *a, Prims_nat s);

void FStar_BitVector_shift_left_vec_lemma_1(Prims_pos n, void *a, Prims_nat s, Prims_nat i);

void FStar_BitVector_shift_left_vec_lemma_2(Prims_pos n, void *a, Prims_nat s, Prims_nat i);

void FStar_BitVector_shift_right_vec_lemma_1(Prims_pos n, void *a, Prims_nat s, Prims_nat i);

void FStar_BitVector_shift_right_vec_lemma_2(Prims_pos n, void *a, Prims_nat s, Prims_nat i);
#endif
