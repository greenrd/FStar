/* This file auto-generated by KreMLin! */
#ifndef __FStar_Bytes_H
#define __FStar_Bytes_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "kremlib.h"
#include "testlib.h"

typedef uint8_t FStar_Bytes_byte;

extern Prims_nat FStar_Bytes_length(FStar_Bytes_bytes x0);

extern uint8_t FStar_Bytes_get(FStar_Bytes_bytes x0, Prims_nat x1);

extern FStar_Bytes_bytes FStar_Bytes_make(uint8_t (*x0)(Prims_nat x0), Prims_nat x1);

extern FStar_Bytes_bytes FStar_Bytes_zero_create(Prims_nat x0);

extern FStar_Bytes_bytes FStar_Bytes_sub(FStar_Bytes_bytes x0, Prims_nat x1, Prims_nat x2);

extern void FStar_Bytes_set(FStar_Bytes_bytes x0, Prims_nat x1, uint8_t x2);

extern FStar_Bytes_bytes FStar_Bytes_string_as_unicode_bytes(Prims_string x0);

extern Prims_string FStar_Bytes_utf8_bytes_as_string(FStar_Bytes_bytes x0);

extern Prims_string FStar_Bytes_unicode_bytes_as_string(FStar_Bytes_bytes x0);

extern FStar_Bytes_bytes FStar_Bytes_string_as_utf8_bytes(Prims_string x0);

extern FStar_Bytes_bytes FStar_Bytes_append(FStar_Bytes_bytes x0, FStar_Bytes_bytes x1);
#endif
